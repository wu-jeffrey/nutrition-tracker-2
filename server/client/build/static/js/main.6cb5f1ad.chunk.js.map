{"version":3,"sources":["routing/authContext.js","routing/protectedRoute.js","components/metrics/CircularProgress.js","components/metrics/metrics.js","components/foodTable/foodTable.js","components/search/useAutocomplete.js","components/search/autocomplete.js","components/search/macroNutrientForm.js","components/search/search.js","components/home/home.js","components/menuBar/menuBar.js","components/signUp/signUp.js","components/login/login.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","AuthProvider","login","bind","logout","state","loading","token","localStorage","getItem","settings","method","headers","a","async","fetch","encodeURI","response","json","user","status","setState","isAuth","setItem","this","undefined","removeItem","Provider","value","props","children","Component","AuthConsumer","Consumer","ProtectedRoute","component","rest","render","to","easeOut","t","min","max","Math","CircularProgress","forwardRef","ref","string","classes","className","color","disableShrink","size","style","thickness","variant","label","displayText","other","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","transform","position","width","height","textAlign","display","flexDirection","justifyContent","clsx","root","charAt","toUpperCase","slice","indeterminate","static","role","svg","viewBox","SIZE","circle","circleIndeterminate","circleStatic","circleDisableShrink","cx","cy","r","fill","strokeWidth","withStyles","theme","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","name","flip","Metrics","prevProps","JSON","stringify","key","percentage","target","val","padding","Grid","container","spacing","direction","justify","alignItems","getDialDisplayText","computePercentage","FoodTable","rows","onRowDelete","event","food_id","_response","success","filter","food","_id","overflowY","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","calories","protein","carbohydrate","fat","IconButton","onClick","handleDeleteClicked","stripDiacritics","normalize","replace","defaultFilterOptions","config","ignoreAccents","ignoreCase","matchFrom","trim","options","inputValue","input","toLowerCase","option","candidate","indexOf","createFilterOptions","pageSize","useAutocomplete","autoComplete","autoHighlight","autoSelect","clearOnEscape","debug","defaultValue","disableClearable","disableCloseOnSelect","disableListWrap","disableOpenOnFocus","filterOptions","filterSelectedOptions","freeSolo","getOptionDisabled","getOptionLabel","x","groupBy","idProp","id","includeInputInList","inputValueProp","multiple","onChange","onClose","onOpen","onInputChange","openProp","open","valueProp","onOptionClick","useState","defaultId","setDefaultId","useEffect","random","firstFocus","useRef","inputRef","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","selectedIndexRef","setHighlightedIndex","index","mouse","current","removeAttribute","setAttribute","prev","querySelector","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","isControlled","valueState","setValue","isInputValueControlled","inputValueState","setInputValue","focused","setFocused","resetInputValue","useEventCallback","newValue","newInputValue","optionLabel","process","isOpenControlled","openState","setOpenState","inputValueFilter","popupOpen","filteredOptions","length","focusTag","tagToFocus","focus","changeHighlightedIndex","diff","nextIndex","nextFocus","hasAttribute","disabled","getAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","handleOpen","handleClose","handleValue","selectNewValue","item","Array","isArray","itemIndex","push","splice","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","preventDefault","stopPropagation","handleFocus","handleBlur","handleInputChange","handleOptionMouseOver","Number","currentTarget","handleOptionClick","handleTagDelete","handleListboxRef","node","setRef","handlePopupIndicator","handleMouseDown","nodeName","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","reduce","acc","getRootProps","onKeyDown","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","propTypes","PropTypes","bool","object","any","func","array","DisablePortal","popperRef","Autocomplete","closeIcon","fontSize","disablePortal","ListboxComponent","loadingText","noOptionsText","PaperComponent","Paper","PopperComponent","PopperComponentProp","Popper","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","update","startAdornment","getCustomizedTagProps","params","tag","Chip","ListSubheader","groupLabel","groupUl","renderListOption","optionProps","Fragment","InputLabelProps","InputProps","inputRoot","endAdornment","aria-label","title","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputProps","inputFocused","popper","popperDisablePortal","clientWidth","paper","noOptions","listbox","option2","index2","visibility","margin","flexWrap","paddingTop","minWidth","flexGrow","opacity","textOverflow","marginRight","action","active","zIndex","modal","typography","body1","overflow","listStyle","text","minHeight","cursor","outline","WebkitTapHighlightColor","paddingBottom","paddingLeft","paddingRight","breakpoints","up","backgroundColor","hover","pointerEvents","background","top","MacroNutrientForm","onSubmit","food_name","mode","Accept","body","handleSubmit","xs","TextField","required","fullWidth","handleChange","Button","type","Search","nutrition_facts","serving_qty","serving_unit","serving_weight_grams","nf_calories","nf_protein","nf_total_carbohydrate","nf_total_fat","foods","Object","keys","flat","nix_item_id","payload","allowed","filtered","handleOptionClicked","e","Home","foodList","metrics","prevState","calcFoodMetrics","deleted_id","Card","CardContent","daily_macro_goal","deleted_row","handleRowDelete","added_food","handleFoodAdded","useStyles","makeStyles","menuButton","MenuBar","Boolean","handleMenu","AppBar","Toolbar","Typography","email","aria-controls","aria-haspopup","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","SignUp","firstName","lastName","password","checked","callback","msg","console","log","history","Container","maxWidth","CssBaseline","Avatar","noValidate","sm","autoFocus","Link","href","withRouter","Login","rememberMe","setTimeout","FormControlLabel","control","Checkbox","App","path","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6cb5f1ad.chunk.js","sourcesContent":["import React from 'react';\n\nconst AuthContext = React.createContext();\n\nclass AuthProvider extends React.Component {\n  constructor() {\n    super();\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n\n    const settings = {\n      method: 'GET',\n      headers: {\n        'x-auth-token': localStorage.getItem('token'),\n      },\n    };\n\n    (async () => {\n      const response = await fetch(encodeURI(\"/api/auth/user\"), settings);\n      const user = await response.json();\n\n      if (response.status !== 200) {\n        this.setState({\n          loading: false,\n          isAuth: false,\n        })\n      } else {\n        this.setState({\n          loading: false, \n          isAuth: true,\n          token: token,\n          user: user,\n        })\n      }\n    })();\n  }\n\n  login(token, user) {\n    // TODO: Vulnerability to CSRF & XSS because this sensitive data is exposed\n    // NOTE: Need to set localStore before state, because the latter triggers \n    // a component update which needs the tokens in the store\n    localStorage.setItem('token', token);\n    this.setState({ isAuth: true, token: token, user: user });\n  }\n\n  logout() {\n    this.setState({ isAuth: false, token: undefined, user: undefined });\n    localStorage.removeItem('token');\n  }\n\n  render() {\n    return this.state.loading ? (null) : (\n      <AuthContext.Provider\n        value={{\n          isAuth: this.state.isAuth,\n          login: this.login,\n          logout: this.logout,\n          user: this.state.user,\n        }}\n      >\n        {this.props.children}\n      </AuthContext.Provider>\n    )\n  }\n}\n\nconst AuthConsumer = AuthContext.Consumer\n\nexport { AuthProvider, AuthConsumer }\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthConsumer } from './authContext.js';\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n  <AuthConsumer>\n    {({ isAuth }) => (\n      <Route\n        render={props => isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />}\n        {...rest}\n      />\n    )}\n  </AuthConsumer>\n)\n\nexport default ProtectedRoute;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst SIZE = 44;\n\nfunction capitalize(string) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof string !== 'string') {\n      throw new Error('Material-UI: capitalize(string) expects a string argument.');\n    }\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction getRelativeValue(value, min, max) {\n  const clampedValue = Math.min(Math.max(min, value), max);\n  return (clampedValue - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1);\n  // https://gist.github.com/gre/1650294\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-block',\n  },\n  /* Styles applied to the root element if `variant=\"static\"`. */\n  static: {\n    transition: theme.transitions.create('transform'),\n  },\n  /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n  indeterminate: {\n    animation: '$circular-rotate 1.4s linear infinite',\n  },\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    color: theme.palette.primary.main,\n  },\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    color: theme.palette.secondary.main,\n  },\n  /* Styles applied to the `svg` element. */\n  svg: {\n    display: 'block', // Keeps the progress centered\n  },\n  /* Styles applied to the `circle` svg path. */\n  circle: {\n    stroke: 'currentColor',\n    // Use butt to follow the specification, by chance, it's already the default CSS value.\n    // strokeLinecap: 'butt',\n  },\n  /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n  circleStatic: {\n    transition: theme.transitions.create('stroke-dashoffset'),\n  },\n  /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n  circleIndeterminate: {\n    animation: '$circular-dash 1.4s ease-in-out infinite',\n    // Some default value that looks fine waiting for the animation to kicks in.\n    strokeDasharray: '80px, 200px',\n    strokeDashoffset: '0px', // Add the unit to fix a Edge 16 and below bug.\n  },\n  '@keyframes circular-rotate': {\n    '100%': {\n      transform: 'rotate(360deg)',\n    },\n  },\n  '@keyframes circular-dash': {\n    '0%': {\n      strokeDasharray: '1px, 200px',\n      strokeDashoffset: '0px',\n    },\n    '50%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-15px',\n    },\n    '100%': {\n      strokeDasharray: '100px, 200px',\n      strokeDashoffset: '-125px',\n    },\n  },\n  /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n  circleDisableShrink: {\n    animation: 'none',\n  },\n});\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate',\n    label,\n    displayText,\n    ...other\n  } = props;\n\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = `${(((100 - value) / 100) * circumference).toFixed(3)}px`;\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = `${(easeIn((100 - value) / 100) * circumference).toFixed(\n        3,\n      )}px`;\n      rootStyle.transform = `rotate(${(easeOut(value / 70) * 270).toFixed(3)}deg)`;\n    }\n  }\n\n  return (\n    <div style={{position:'relative'}}>\n      <div style={{position:'absolute', width: size, height:size, textAlign:'center', display:'flex', flexDirection:'column', justifyContent:'center'}}>\n        <div>{displayText}</div>\n        <div>{label}</div>\n      </div>\n      <div\n        className={clsx(\n          classes.root,\n          {\n            [classes[`color${capitalize(color)}`]]: color !== 'inherit',\n            [classes.indeterminate]: variant === 'indeterminate',\n            [classes.static]: variant === 'static',\n          },\n          className,\n        )}\n        style={{ width: size, height: size, ...rootStyle, ...style }}\n        ref={ref}\n        role=\"progressbar\"\n        {...rootProps}\n        {...other}\n      >\n        <svg className={classes.svg} viewBox={`${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`}>\n          <circle\n            className={clsx(classes.circle, {\n              [classes.circleIndeterminate]: variant === 'indeterminate',\n              [classes.circleStatic]: variant === 'static',\n              [classes.circleDisableShrink]: disableShrink,\n            })}\n            style={circleStyle}\n            cx={SIZE}\n            cy={SIZE}\n            r={(SIZE - thickness) / 2}\n            fill=\"none\"\n            strokeWidth={thickness}\n          />\n        </svg>\n      </div>\n    </div>\n  );\n});\n\nCircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error(\n        'Material-UI: you have provided the `disableShrink` prop ' +\n          'with a variant other than `indeterminate`. This will have no effect.',\n      );\n    }\n\n    return null;\n  }),\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static']),\n};\n\nexport default withStyles(styles, { name: 'MuiCircularProgress', flip: false })(CircularProgress);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from './CircularProgress';\n\nclass Metrics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {...this.props};\n  }\n\n  componentDidUpdate(prevProps) {\n    // TODO: String comparison here feels hacky\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.setState({...this.props});\n    }\n  }\n\n  computePercentage(key) {\n    const percentage = 100*(this.state[key]/this.state.target[key]) || 0;\n    return (percentage > 100 ? 100 : percentage)\n  }\n\n  getDialDisplayText(key) {\n    const val = Math.round(this.state[key]) || 0;\n    const str = `${val}/${Math.round(this.state.target[key])}`;\n    return str;\n  }\n\n  render() {\n    return (\n      <div style={{ padding: 20 }}>\n        <Grid \n          container \n          spacing={3}\n          direction=\"row\"\n          justify=\"space-around\"\n          alignItems=\"center\"\n        >\n          <CircularProgress \n            label={'calories'} \n            displayText={this.getDialDisplayText('calories')} \n            size={200} \n            variant=\"static\" \n            value={this.computePercentage('calories')} \n          />\n          <CircularProgress \n            label={'protein (g)'} \n            displayText={this.getDialDisplayText('protein')} \n            size={200} \n            variant=\"static\"\n            color=\"secondary\"\n            value={this.computePercentage('protein')} \n          />\n          <CircularProgress \n            label={'carbohydrate (g)'} \n            displayText={this.getDialDisplayText('carbohydrate')} \n            size={200} \n            variant=\"static\"\n            value={this.computePercentage('carbohydrate')} \n          />\n          <CircularProgress \n            label={'fat (g)'} \n            displayText={this.getDialDisplayText('fat')} \n            size={200} \n            variant=\"static\"\n            color=\"secondary\"\n            value={this.computePercentage('fat')} \n          />\n        </Grid>      \n      </div>\n    );\n  }\n}\n\nexport default Metrics;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nclass FoodTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: (props.rows || []),\n    }\n    this.onRowDelete = props.onRowDelete;\n  }\n\n  componentDidUpdate(prevProps) {\n    // TODO: String comparison here feels hacky\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.setState({...this.props});\n    }\n  }\n\n  handleDeleteClicked(event, food_id) {\n    const settings = {\n      method: 'DELETE',\n      headers: {\n        'x-auth-token': localStorage.getItem('token'),\n      },\n    };\n\n    (async () => {\n      const _response = await fetch(`/api/foods/${food_id}`, settings);\n      const response = await _response.json();\n      \n      if (response.success) {\n        this.setState({\n          rows: [...this.state.rows].filter((food) => food._id !== food_id)\n        });\n\n        if (this.onRowDelete) {\n          this.onRowDelete(food_id);\n        }\n      }\n    })();\n  }\n\n  render() {\n    return (\n      <div style={{overflowY:'scroll', maxHeight:500}}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              <TableCell>Food Name</TableCell>\n              <TableCell align=\"right\">Calories</TableCell>\n              <TableCell align=\"right\">Protein (g)</TableCell>\n              <TableCell align=\"right\">Carbs (g)</TableCell>\n              <TableCell align=\"right\">Fat (g)</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.rows.map(row => (\n              <TableRow key={row._id}>\n                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n                <TableCell align=\"right\">{row.carbohydrate}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">\n                  <IconButton onClick={(event) => this.handleDeleteClicked(event, row._id)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default FoodTable;","/* eslint-disable no-constant-condition */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback } from '@material-ui/core/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined'\n    ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n    : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    matchFrom = 'any',\n    stringify = JSON.stringify,\n    trim = false,\n  } = config;\n\n  return (options, { inputValue }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    return options.filter(option => {\n      let candidate = stringify(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n  };\n}\n\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when pageup and pagedown keys are used.\nconst pageSize = 5;\n\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    clearOnEscape = false,\n    debug = false,\n    defaultValue,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disableListWrap = false,\n    disableOpenOnFocus = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel = x => x,\n    groupBy,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onOpen,\n    onInputChange,\n    open: openProp,\n    options = [],\n    value: valueProp,\n    // Added this callback prop\n    onOptionClick,\n  } = props;\n\n  const [defaultId, setDefaultId] = React.useState();\n  const id = idProp || defaultId;\n  React.useEffect(() => {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(`mui-autocomplete-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const selectedIndexRef = React.useRef(-1);\n\n  function setHighlightedIndex(index, mouse = false) {\n    highlightedIndexRef.current = index;\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[data-focus]');\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true');\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      const element = option;\n\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop;\n      }\n    }\n  }\n\n  const { current: isControlled } = React.useRef(valueProp !== undefined);\n  const [valueState, setValue] = React.useState(() => {\n    return !isControlled ? defaultValue || (multiple ? [] : null) : null;\n  });\n  const value = isControlled ? valueProp : valueState;\n\n  const { current: isInputValueControlled } = React.useRef(inputValueProp != null);\n  const [inputValueState, setInputValue] = React.useState('');\n  const inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  const [focused, setFocused] = React.useState(false);\n\n  const resetInputValue = useEventCallback((event, newValue) => {\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(\n            [\n              'Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.',\n              `The component expect a string but received ${typeof optionLabel}.`,\n              `For the input option: ${JSON.stringify(\n                newValue,\n              )}, \\`getOptionLabel\\` returns: ${newInputValue}.`,\n            ].join('\\n'),\n          );\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue);\n    }\n  });\n\n  React.useEffect(() => {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  const { current: isOpenControlled } = React.useRef(openProp != null);\n  const [openState, setOpenState] = React.useState(false);\n  const open = isOpenControlled ? openProp : openState;\n\n  const inputValueFilter =\n    !multiple && value && inputValue === getOptionLabel(value) ? '' : inputValue;\n\n  let popupOpen = open;\n\n  const filteredOptions = popupOpen\n    ? filterOptions(\n        options.filter(option => {\n          if (\n            filterSelectedOptions &&\n            (multiple ? value.indexOf(option) !== -1 : value === option)\n          ) {\n            return false;\n          }\n          return true;\n        }),\n        { inputValue: inputValueFilter },\n      )\n    : [];\n\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (\n        (direction === 'next' && nextFocus === filteredOptions.length) ||\n        (direction === 'previous' && nextFocus === -1)\n      ) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (\n        option &&\n        (!option.hasAttribute('tabindex') ||\n          option.disabled ||\n          option.getAttribute('aria-disabled') === 'true')\n      ) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const changeHighlightedIndex = (diff, direction) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if ((disableListWrap && highlightedIndexRef.current !== -1) || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n    selectedIndexRef.current = nextIndex;\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(() => {\n    changeHighlightedIndex('reset', 'next');\n  }, [filteredOptions.length]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  const handleClose = event => {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  const handleValue = (event, newValue) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  };\n\n  const selectNewValue = (event, newValue) => {\n    if (multiple) {\n      const item = newValue;\n      newValue = Array.isArray(value) ? [...value] : [];\n      const itemIndex = value.indexOf(item);\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n    handleValue(event, newValue);\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n\n    resetInputValue(event, newValue);\n\n    selectedIndexRef.current = -1;\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (\n        (direction === 'next' && nextFocus === value.length) ||\n        (direction === 'previous' && nextFocus === -1)\n      ) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (\n        option &&\n        (!option.hasAttribute('tabindex') ||\n          option.disabled ||\n          option.getAttribute('aria-disabled') === 'true')\n      ) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    handleValue(event, multiple ? [] : null);\n    if (disableOpenOnFocus) {\n      handleClose();\n    }\n    setInputValue('');\n  };\n\n  const handleKeyDown = event => {\n    if (['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    switch (event.key) {\n      case 'Home':\n        if (popupOpen) {\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex('start', 'next');\n        }\n        break;\n      case 'End':\n        if (popupOpen) {\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex('end', 'previous');\n        }\n        break;\n      case 'PageUp':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex(-pageSize, 'previous');\n        handleOpen(event);\n        break;\n      case 'PageDown':\n        // Prevent scroll of the page\n        event.preventDefault();\n        changeHighlightedIndex(pageSize, 'next');\n        handleOpen(event);\n        break;\n      case 'ArrowDown':\n        // Prevent cursor move\n        event.preventDefault();\n        changeHighlightedIndex(1, 'next');\n        handleOpen(event);\n        break;\n      case 'ArrowUp':\n        // Prevent cursor move\n        event.preventDefault();\n        changeHighlightedIndex(-1, 'previous');\n        handleOpen(event);\n        break;\n      case 'ArrowLeft':\n        handleFocusTag(event, 'previous');\n        break;\n      case 'ArrowRight':\n        handleFocusTag(event, 'next');\n        break;\n      case 'Enter':\n        if (highlightedIndexRef.current !== -1 && popupOpen) {\n          // We don't want to validate the form.\n          event.preventDefault();\n          selectNewValue(event, filteredOptions[highlightedIndexRef.current]);\n\n          // Move the selection to the end.\n          if (autoComplete) {\n            inputRef.current.setSelectionRange(\n              inputRef.current.value.length,\n              inputRef.current.value.length,\n            );\n          }\n        } else if (freeSolo && inputValue !== '') {\n          selectNewValue(event, inputValue);\n        }\n        break;\n      case 'Escape':\n        if (popupOpen) {\n          // Avoid Opera to exit fullscreen mode.\n          event.preventDefault();\n          // Avoid the Modal to handle the event.\n          event.stopPropagation();\n          handleClose(event);\n        } else if (clearOnEscape && inputValue !== '') {\n          // Avoid Opera to exit fullscreen mode.\n          event.preventDefault();\n          // Avoid the Modal to handle the event.\n          event.stopPropagation();\n          handleClear(event);\n        }\n        break;\n      case 'Backspace':\n        if (multiple && inputValue === '' && value.length > 0) {\n          const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n          const newValue = [...value];\n          newValue.splice(index, 1);\n          handleValue(event, newValue);\n        }\n        break;\n      default:\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (!disableOpenOnFocus) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocused(false);\n    firstFocus.current = true;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && selectedIndexRef.current !== -1) {\n      handleValue(event, filteredOptions[selectedIndexRef.current]);\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event);\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n\n    setInputValue(newValue);\n\n    if (onInputChange) {\n      onInputChange(event, newValue);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  const handleOptionClick = event => {\n    // TODO: This is a hack, don't want to overwrite input field when clicking option\n    // because that causes an API request to be sent because we are checking oninputChange\n    if (onOptionClick) {\n      onOptionClick(event, filteredOptions[highlightedIndexRef.current])\n    } else {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current]);\n    }\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = [...value];\n    newValue.splice(index, 1);\n    handleValue(event, newValue);\n  };\n\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    // Restore the focus to the correct option.\n    setHighlightedIndex(highlightedIndexRef.current);\n  });\n\n  const handlePopupIndicator = event => {\n    inputRef.current.focus();\n\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleMouseDown = event => {\n    if (event.target.nodeName !== 'INPUT') {\n      // Prevent blur\n      event.preventDefault();\n    }\n  };\n\n  const handleClick = () => {\n    if (\n      firstFocus.current &&\n      inputRef.current.selectionEnd - inputRef.current.selectionStart === 0\n    ) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = () => {\n    if (inputValue === '') {\n      handlePopupIndicator();\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const key = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].key === key) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        acc.push({\n          key,\n          index,\n          options: [option],\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: () => ({\n      'aria-owns': popupOpen ? `${id}-popup` : null,\n      role: 'combobox',\n      'aria-expanded': popupOpen,\n      onKeyDown: handleKeyDown,\n      onMouseDown: handleMouseDown,\n      onClick: handleClick,\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id,\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': popupOpen ? `${id}-popup` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // (autocomplete and autofill)\n      autoComplete: 'disabled',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear,\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator,\n    }),\n    getTagProps: ({ index }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index),\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-popup`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      },\n    }),\n    getOptionProps: ({ index, option }) => {\n      const selected = multiple ? value.indexOf(option) !== -1 : value === option;\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected,\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions,\n  };\n}\n\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from './useAutocomplete';\n\nexport { createFilterOptions };\n\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    '&:hover $clearIndicatorDirty, &$focused $clearIndicatorDirty': {\n      visibility: 'visible',\n    },\n  },\n  /* Pseudo-class applied to the root element if focused. */\n  focused: {},\n  /* Styles applied to the tag elements, e.g. the chips. */\n  tag: {\n    margin: theme.spacing(0.5),\n  },\n  /* Styles applied to the Input element. */\n  inputRoot: {\n    flexWrap: 'wrap',\n    '&[class*=\"MuiOutlinedInput-root\"]': {\n      padding: 8,\n      '& $input': {\n        padding: '10.5px 6px',\n      },\n    },\n    '&[class*=\"MuiFilledInput-root\"]': {\n      paddingTop: 21,\n      '& $input': {\n        paddingTop: 10,\n      },\n    },\n  },\n  /* Styles applied to the input element. */\n  input: {\n    width: 0,\n    minWidth: 30,\n    flexGrow: 1,\n    opacity: 0,\n    textOverflow: 'ellipsis',\n  },\n  /* Styles applied to the input element if tag focused. */\n  inputFocused: {\n    opacity: 1,\n  },\n  /* Styles applied to the clear indictator. */\n  clearIndicator: {\n    marginRight: -2,\n    padding: 4,\n    color: theme.palette.action.active,\n    visibility: 'hidden',\n  },\n  /* Styles applied to the clear indictator if the input is dirty. */\n  clearIndicatorDirty: {},\n  /* Styles applied to the popup indictator. */\n  popupIndicator: {\n    padding: 2,\n    marginRight: -2,\n    color: theme.palette.action.active,\n  },\n  /* Styles applied to the popup indictator if the popup is open. */\n  popupIndicatorOpen: {\n    transform: 'rotate(180deg)',\n  },\n  /* Styles applied to the popper element. */\n  popper: {\n    zIndex: theme.zIndex.modal,\n  },\n  /* Styles applied to the popper element if `disablePortal={true}`. */\n  popperDisablePortal: {\n    position: 'absolute',\n  },\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    ...theme.typography.body1,\n    margin: '4px 0',\n    '& > ul': {\n      maxHeight: '40vh',\n      overflow: 'auto',\n    },\n  },\n  /* Styles applied to the `listbox` component. */\n  listbox: {\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0px',\n    position: 'relative',\n  },\n  /* Styles applied to the loading wrapper. */\n  loading: {\n    color: theme.palette.text.secondary,\n    padding: '14px 16px',\n  },\n  /* Styles applied to the no option wrapper. */\n  noOptions: {\n    color: theme.palette.text.secondary,\n    padding: '14px 16px',\n  },\n  /* Styles applied to the option elements. */\n  option: {\n    minHeight: 48,\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    outline: 'none',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto',\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.palette.action.selected,\n    },\n    '&[data-focus=\"true\"]': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: 0.5,\n      pointerEvents: 'none',\n    },\n    '&:active': {\n      backgroundColor: theme.palette.action.selected,\n    },\n  },\n  /* Styles applied to the group's label elements. */\n  groupLabel: {\n    backgroundColor: theme.palette.background.paper,\n    top: -8,\n  },\n  /* Styles applied to the group's ul elements. */\n  groupUl: {\n    padding: 0,\n  },\n});\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  const { popperRef, anchorEl, open, ...other } = props;\n  return <div {...other} />;\n}\n\nconst Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    classes,\n    className,\n    clearOnEscape = false,\n    closeIcon = <CloseIcon fontSize=\"small\" />,\n    debug = false,\n    defaultValue,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disableListWrap = false,\n    disableOpenOnFocus = false,\n    disablePortal = false,\n    filterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel = x => x,\n    groupBy,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    ListboxComponent = 'ul',\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    onChange,\n    onClose,\n    onInputChange,\n    onOpen,\n    // Hack here\n    onOptionClick,\n    open,\n    options = [],\n    PaperComponent = Paper,\n    PopperComponent: PopperComponentProp = Popper,\n    popupIcon = <ArrowDropDownIcon />,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    value: valueProp,\n    ...other\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  const popperRef = React.useRef(null);\n  React.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n  const PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions,\n  } = useAutocomplete(props);\n\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => ({\n      className: classes.tag,\n      ...getTagProps(params),\n    });\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => (\n        <Chip label={getOptionLabel(option)} {...getCustomizedTagProps({ index })} />\n      ));\n    }\n  }\n\n  const defaultRenderGroup = params => (\n    <li key={params.key}>\n      <ListSubheader className={classes.groupLabel} component=\"div\">\n        {params.key}\n      </ListSubheader>\n      <ul className={classes.groupUl}>{params.children}</ul>\n    </li>\n  );\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const renderOption = renderOptionProp || getOptionLabel;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({ option, index });\n\n    return (\n      <li {...optionProps} className={classes.option}>\n        {renderOption(option, {\n          selected: optionProps['aria-selected'],\n          inputValue,\n        })}\n      </li>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <div\n        ref={ref}\n        className={clsx(\n          classes.root,\n          {\n            [classes.focused]: focused,\n          },\n          className,\n        )}\n        {...getRootProps()}\n        {...other}\n      >\n        {renderInput({\n          id,\n          disabled,\n          InputLabelProps: getInputLabelProps(),\n          InputProps: {\n            ref: setAnchorEl,\n            className: classes.inputRoot,\n            startAdornment,\n            endAdornment: (\n              <React.Fragment>\n                {disableClearable || disabled ? null : (\n                  <IconButton\n                    {...getClearProps()}\n                    aria-label=\"Clear\"\n                    title=\"Clear\"\n                    className={clsx(classes.clearIndicator, {\n                      [classes.clearIndicatorDirty]: dirty,\n                    })}\n                  >\n                    {closeIcon}\n                  </IconButton>\n                )}\n\n                {freeSolo ? null : (\n                  <IconButton\n                    {...getPopupIndicatorProps()}\n                    disabled={disabled}\n                    aria-label={popupOpen ? 'Close popup' : 'Open popup'}\n                    title={popupOpen ? 'Close popup' : 'Open popup'}\n                    className={clsx(classes.popupIndicator, {\n                      [classes.popupIndicatorOpen]: popupOpen,\n                    })}\n                  >\n                    {popupIcon}\n                  </IconButton>\n                )}\n              </React.Fragment>\n            ),\n          },\n          inputProps: {\n            className: clsx(classes.input, {\n              [classes.inputFocused]: focusedTag === -1,\n            }),\n            disabled,\n            ...getInputProps(),\n          },\n        })}\n      </div>\n      {popupOpen && anchorEl ? (\n        <PopperComponent\n          className={clsx(classes.popper, {\n            [classes.popperDisablePortal]: disablePortal,\n          })}\n          style={{\n            width: anchorEl ? anchorEl.clientWidth : null,\n          }}\n          role=\"presentation\"\n          popperRef={popperRef}\n          anchorEl={anchorEl}\n          open\n        >\n          <PaperComponent className={classes.paper}>\n            {loading ? <div className={classes.loading}>{loadingText}</div> : null}\n            {groupedOptions.length === 0 && !freeSolo && !loading ? (\n              <div className={classes.noOptions}>{noOptionsText}</div>\n            ) : null}\n            {groupedOptions.length > 0 ? (\n              <ListboxComponent className={classes.listbox} {...getListboxProps()}>\n                {groupedOptions.map((option, index) => {\n                  if (groupBy) {\n                    return renderGroup({\n                      key: option.key,\n                      children: option.options.map((option2, index2) =>\n                        renderListOption(option2, option.index + index2),\n                      ),\n                    });\n                  }\n                  return renderListOption(option, index);\n                })}\n              </ListboxComponent>\n            ) : null}\n          </PaperComponent>\n        </PopperComponent>\n      ) : null}\n    </React.Fragment>\n  );\n});\n\nAutocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {any[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {any[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n/**\n   * Callback fired when an option is clicked.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} value\n   */\n  onOptionClick: PropTypes.func,\n  /**\n   * Control the popup` open state.\n  */\n  open: PropTypes.bool,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {any} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * The value of the autocomplete.\n   */\n  value: PropTypes.any,\n};\n\nexport default withStyles(styles, { name: 'MuiAutocomplete' })(Autocomplete);","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nclass MacroNutrientForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {...this.props};\n    this.onSubmit = props.onSubmit\n  }\n\n  componentDidUpdate(prevProps) {\n    // TODO: String comparison here feels hacky\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.setState({...this.props});\n    }\n  }\n\n  // TODO: Debounce this!\n  // event.target.id is calories | protein | carbohydrate | fat\n  handleChange(event) {\n    if (this.state[event.target.id] === event.target.value) return;\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    // TODO: put this in a datalayer\n    const { food_name: name, calories, protein, carbohydrate, fat } = this.state;\n    const settings = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'x-auth-token': localStorage.getItem('token'),\n      },\n      body: JSON.stringify({name: name, calories: calories, protein: protein, carbohydrate: carbohydrate, fat: fat})\n    };\n\n    (async () => {\n      const _response = await fetch(\"/api/foods/\", settings);\n      const response = await _response.json();\n      if (this.onSubmit) {\n        this.onSubmit(response);\n      }\n    })();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit.bind(this)} autoComplete=\"off\">\n        {/* Container with 2 top inputs */}\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            <TextField\n              required\n              fullWidth={true}\n              id=\"food_name\"\n              label=\"Food Name\"\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.state.food_name}\n              onChange={this.handleChange.bind(this)}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth={true}\n              id=\"calories\"\n              label=\"Calories\"\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.state.calories}\n              onChange={this.handleChange.bind(this)}\n            />\n          </Grid>\n        </Grid>\n        {/* Container with 3 bottom inputs */}\n        <Grid container spacing={3}>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth={true}\n              id=\"protein\"\n              label=\"Protein\"\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.state.protein}\n              onChange={this.handleChange.bind(this)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth={true}\n              id=\"carbohydrate\"\n              label=\"Carbs\"\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.state.carbohydrate}\n              onChange={this.handleChange.bind(this)}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              fullWidth={true}\n              id=\"fat\"\n              label=\"Fats\"\n              margin=\"normal\"\n              variant=\"filled\"\n              value={this.state.fat}\n              onChange={this.handleChange.bind(this)}\n            />\n          </Grid>\n        </Grid>\n        {/* Container to center button */}\n        <Grid container justify=\"center\">\n          <Button variant=\"contained\" type=\"submit\" size=\"medium\" color=\"primary\">\n            Add Food\n          </Button>\n        </Grid>\n      </form>\n    );\n  }\n}\n\nexport default MacroNutrientForm;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from './autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport MacroNutrientForm from './macroNutrientForm';\nclass Search extends React.Component {\n  // Find a better event to update things on\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      loading: false,\n      options: [],\n      // TODO: Consider using Typescript\n      nutrition_facts: {\n        food_name: \"\",\n        serving_qty: 0,\n        serving_unit: \"\",\n        serving_weight_grams: \"\",\n        nf_calories: 0,\n        nf_protein: 0,\n        nf_total_carbohydrate: 0,\n        nf_total_fat: 0,\n      },\n    }\n    this.onSubmit = props.onSubmit;\n  }\n\n  handleInputChange(event, value) {\n    // TODO: Fix this Temporary \"Debounce\"\n    if(value !== \"\" && value.length > 2) {\n      // Make loader appear and keep popper open\n      this.setState(state => ({\n        open: true,\n        loading: true\n      }));\n\n      (async () => {\n        const response = await fetch(encodeURI(`/api/food-search/foods/${value}`));\n        const foods = await response.json();\n        this.setState(state => ({\n          options: Object.keys(foods)\n          .map((key) => {\n            return foods[key];\n          })\n          .flat()\n          .map((food) => {\n            return { name: food.food_name, nix_item_id: food.nix_item_id };\n          }),\n          loading: false\n        }))\n      })();\n    } else {\n      this.setState(state => ({\n        open: false,\n        loading: false\n      }));\n    }\n  }\n\n  handleOptionClicked(event, value) {\n    // TODO: weird bug here, may require more thorough investigation\n    // value is sometimes undefined, investigate autocomplete component\n    if (value === undefined) return;\n    (async () => {\n      const response = await fetch(encodeURI(`/api/food-search/nutrition-facts/${!!value.nix_item_id}/${value.nix_item_id || value.name}`));\n      const payload = await response.json();\n\n      // TODO: Consider hashmap for performance\n      // TODO: Consider reformatting the payload in serverside\n      const allowed = [\n        'food_name',\n        'serving_qty',\n        'serving_unit',\n        'serving_weight_grams',\n        'nf_calories',\n        'nf_protein',\n        'nf_total_carbohydrate',\n        'nf_total_fat'\n      ];\n\n      const filtered = Object.keys(payload.foods[0])\n        .filter((key) => allowed.indexOf(key) > -1)\n        .reduce((acc, key) => {\n          acc[key] = payload.foods[0][key];\n          return acc\n        }, {});\n\n      this.setState({\n        nutrition_facts: filtered,\n      })\n    })();\n\n    // Close popper\n    this.setState({\n      open: false,\n      loading: false,\n      options: []\n    })\n  }\n\n  render() { \n    return(\n      <React.Fragment>\n        <Autocomplete\n          id=\"search-select\"\n          freeSolo={true}\n          open={this.state.open}\n          disableOpenOnFocus={true}\n          // TODO: Figure out better way to get rid of the bind, understand newer syntax instead of component class, its exports a function\n          onInputChange={this.handleInputChange.bind(this)}\n          onOptionClick={this.handleOptionClicked.bind(this)}\n          onClose={e => this.setState({open: false})}\n          getOptionLabel={option => option.name}\n          options={this.state.options}\n          loading={this.state.loading}\n          renderInput={params => (\n            <TextField\n              {...params}\n              label=\"Search Foods\"\n              fullWidth\n              variant=\"outlined\"\n              InputProps={{\n                ...params.InputProps,\n                endAdornment: (\n                  <React.Fragment>\n                    {this.state.loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                    {params.InputProps.endAdornment}\n                  </React.Fragment>\n                ),\n              }}\n            />\n          )}\n        />\n        {/* TODO: Might want to make props CamelCase */}\n        <MacroNutrientForm\n          food_name={this.state.nutrition_facts.food_name}\n          serving_qty={this.state.nutrition_facts.serving_qty}\n          serving_unit={this.state.nutrition_facts.serving_unit}\n          serving_weight_grams={this.state.nutrition_facts.serving_weight_grams}\n          calories={this.state.nutrition_facts.nf_calories}\n          protein={this.state.nutrition_facts.nf_protein}\n          carbohydrate={this.state.nutrition_facts.nf_total_carbohydrate}\n          fat={this.state.nutrition_facts.nf_total_fat}\n          onSubmit={this.onSubmit}\n        ></MacroNutrientForm>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport './home.css';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Metrics from '../metrics/metrics.js'\nimport FoodTable from '../foodTable/foodTable.js';\nimport Search from '../search/search.js';\nimport { AuthConsumer } from '../../routing/authContext.js';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foodList:[], \n      metrics:{\n        calories: 0,\n        protein: 0,\n        carbohydrate: 0,\n        fat: 0,\n      }\n    };\n  }\n\n  componentDidMount() {\n    const settings = {\n      method: 'GET',\n      headers: {\n        'x-auth-token': localStorage.getItem('token'),\n      },\n    };\n\n    (async () => {\n      const response = await fetch(`/api/foods/`, settings);\n      const foods = await response.json();\n      this.setState({foodList: foods});\n    })();\n  }\n\n  calcFoodMetrics() {\n    if (!this.state.foodList) return;\n    const total = this.state.foodList.reduce((acc, food) => {\n      acc.calories += food.calories;\n      acc.protein += food.protein;\n      acc.carbohydrate += food.carbohydrate;\n      acc.fat += food.fat;\n      return acc;\n    }, {calories:0, protein:0, carbohydrate:0, fat:0});\n    return total;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (JSON.stringify(prevState) !== JSON.stringify(this.state)) {\n      this.setState({metrics: this.calcFoodMetrics()});\n    }\n  }\n\n  handleRowDelete(deleted_id) {\n    this.setState({\n      foodList: [...this.state.foodList].filter((food) => food._id !== deleted_id)\n    });\n  }\n\n  handleFoodAdded(food) {\n    this.setState({\n      foodList: [...this.state.foodList, food]\n    });\n  }\n\n  render() {\n    return (\n      <AuthConsumer>\n        {({ user }) => (\n          <div className=\"home\">\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Card className=\"card\">\n                  <CardContent>\n                    <Metrics \n                      calories={this.state.metrics.calories}\n                      protein={this.state.metrics.protein}\n                      carbohydrate={this.state.metrics.carbohydrate}\n                      fat={this.state.metrics.fat}\n                      // Hardcoded target here, make variable when implementing goals section\n                      target={user.daily_macro_goal}\n                    ></Metrics>\n                  </CardContent>\n                </Card>\n              </Grid>\n      \n              {/* Left Column */}\n              <Grid item xs={7}>\n                <Card className=\"card\">\n                  <FoodTable \n                    rows={this.state.foodList}\n                    onRowDelete={(deleted_row) => this.handleRowDelete(deleted_row)}\n                  >\n                  </FoodTable>\n                </Card>\n              </Grid>\n              \n              {/* Right Column */}\n              <Grid item xs={5}>\n                <Card className=\"card\">\n                  <CardContent>\n                    <Search onSubmit={(added_food) => this.handleFoodAdded(added_food )}></Search>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>      \n          </div>\n        )}\n      </AuthConsumer>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AuthConsumer } from '../../routing/authContext.js';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function MenuBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AuthConsumer>\n      {({ isAuth, logout, user }) => (\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <Typography variant=\"h6\" className={classes.title}>\n                Track It\n              </Typography>\n              {isAuth && (\n                <div>\n                  <Typography variant=\"overline\">\n                    {user.email}\n                  </Typography>\n                  <IconButton\n                    aria-label=\"account of current user\"\n                    aria-controls=\"menu-appbar\"\n                    aria-haspopup=\"true\"\n                    onClick={handleMenu}\n                    color=\"inherit\"\n                  >\n                    <AccountCircle />\n                  </IconButton>\n                  <Menu\n                    id=\"menu-appbar\"\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    keepMounted\n                    transformOrigin={{\n                      vertical: 'top',\n                      horizontal: 'right',\n                    }}\n                    open={open}\n                    onClose={handleClose}\n                  >\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\n                    <MenuItem onClick={() => {handleClose(); logout();}}>Sign Out</MenuItem>\n                  </Menu>\n                </div>\n              )}\n            </Toolbar>\n          </AppBar>\n        </div>\n      )}\n    </AuthConsumer>\n  );\n}","import React from 'react';\nimport './signUp.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { AuthConsumer } from '../../routing/authContext';\nimport { withRouter } from 'react-router-dom';\n\nclass SignUp extends React.Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    \n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(callback, event) {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    // TODO: Add validation\n    const { firstName, lastName, email, password } = this.state;\n    const settings = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        name: firstName + \" \" + lastName,\n        email: email,\n        password: password,\n      })\n    };\n    \n    (async () => {\n      const _response = await fetch(encodeURI(\"/api/users/\"), settings);\n      const response = await _response.json();\n\n      if (response.msg) {\n        console.log(response.msg);\n      } else {\n        callback(response.token, response.user);\n        this.props.history.push('/');\n      }\n    })();\n  }\n\n  render() {\n    return (\n      <AuthConsumer>\n        {({ login }) => (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className=\"paper\">\n              <Avatar className=\"avatar\">\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Sign up\n              </Typography>\n              <form className=\"form\" noValidate onSubmit={this.handleSubmit.bind(this, login)}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      autoComplete=\"fname\"\n                      name=\"firstName\"\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"firstName\"\n                      label=\"First Name\"\n                      autoFocus\n                      onChange={this.handleInputChange.bind(this)}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"lastName\"\n                      label=\"Last Name\"\n                      name=\"lastName\"\n                      autoComplete=\"lname\"\n                      onChange={this.handleInputChange.bind(this)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      onChange={this.handleInputChange.bind(this)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      onChange={this.handleInputChange.bind(this)}\n                    />\n                  </Grid>\n                </Grid>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"submit\"\n                >\n                  Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Link href=\"/login\" variant=\"body2\">\n                      Already have an account? Sign in\n                    </Link>\n                  </Grid> \n                </Grid>\n              </form>\n            </div>\n          </Container>\n        )}\n      </AuthConsumer>\n    );\n  }\n}\n\nexport default withRouter(SignUp);","import React from 'react';\nimport './login.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { AuthConsumer } from '../../routing/authContext';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    rememberMe: false,\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    \n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(callback, event) {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    // TODO: Add validation\n    const { email, password } = this.state;\n    const settings = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      })\n    };\n    \n    (async () => {\n      const _response = await fetch(encodeURI(\"/api/auth\"), settings);\n      const response = await _response.json();\n\n      if (_response.status !== 200) {\n        console.log(response.msg);\n      } else {\n        callback(response.token, response.user);\n        setTimeout(this.props.history.push('/'), 0);\n      }\n    })();\n  }\n\n  render() {\n    return (\n      <AuthConsumer>\n        {({ isAuth, login }) => (isAuth ? <Redirect to='/'/> : (\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className=\"paper\">\n              <Avatar className=\"avatar\">\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Log In\n              </Typography>\n              <form className=\"form\" noValidate onSubmit={this.handleSubmit.bind(this, login)}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email Address\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      onChange={this.handleInputChange.bind(this)}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      id=\"password\"\n                      autoComplete=\"current-password\"\n                      onChange={this.handleInputChange.bind(this)}\n                    />\n                  </Grid>\n                </Grid>\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Remember me\"\n                  onChange={this.handleInputChange.bind(this)}\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"submit\"\n                >\n                  Log In\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                      Forgot password?\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link href=\"/signup\" variant=\"body2\">\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n          </Container>)\n        )}\n      </AuthConsumer>\n    );\n  }\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ProtectedRoute from './routing/protectedRoute.js';\nimport { AuthProvider } from './routing/authContext.js';\nimport Home from './components/home/home.js';\nimport MenuBar from './components/menuBar/menuBar.js';\nimport SignUp from './components/signUp/signUp.js';\nimport Login from './components/login/login.js';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <AuthProvider>\n          <MenuBar />\n\n          <Switch>\n            <Route path=\"/signup\" component={SignUp}></Route>\n            <Route path=\"/login\" component={Login}></Route>\n            <ProtectedRoute path=\"/\" component={Home}></ProtectedRoute>\n            <Home />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}